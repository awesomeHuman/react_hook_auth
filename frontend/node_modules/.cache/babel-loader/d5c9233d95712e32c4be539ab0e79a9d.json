{"ast":null,"code":"/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar t = function (r, e) {\n  return (t = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (t, r) {\n    t.__proto__ = r;\n  } || function (t, r) {\n    for (var e in r) r.hasOwnProperty(e) && (t[e] = r[e]);\n  })(r, e);\n};\n\nfunction r(r, e) {\n  function i() {\n    this.constructor = r;\n  }\n\n  t(r, e), r.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());\n}\n\nfunction e(t) {\n  var r = \"\";\n  Array.isArray(t) || (t = [t]);\n\n  for (var e = 0; e < t.length; e++) {\n    var i = t[e];\n    if (i.type === f.CLOSE_PATH) r += \"z\";else if (i.type === f.HORIZ_LINE_TO) r += (i.relative ? \"h\" : \"H\") + i.x;else if (i.type === f.VERT_LINE_TO) r += (i.relative ? \"v\" : \"V\") + i.y;else if (i.type === f.MOVE_TO) r += (i.relative ? \"m\" : \"M\") + i.x + \" \" + i.y;else if (i.type === f.LINE_TO) r += (i.relative ? \"l\" : \"L\") + i.x + \" \" + i.y;else if (i.type === f.CURVE_TO) r += (i.relative ? \"c\" : \"C\") + i.x1 + \" \" + i.y1 + \" \" + i.x2 + \" \" + i.y2 + \" \" + i.x + \" \" + i.y;else if (i.type === f.SMOOTH_CURVE_TO) r += (i.relative ? \"s\" : \"S\") + i.x2 + \" \" + i.y2 + \" \" + i.x + \" \" + i.y;else if (i.type === f.QUAD_TO) r += (i.relative ? \"q\" : \"Q\") + i.x1 + \" \" + i.y1 + \" \" + i.x + \" \" + i.y;else if (i.type === f.SMOOTH_QUAD_TO) r += (i.relative ? \"t\" : \"T\") + i.x + \" \" + i.y;else {\n      if (i.type !== f.ARC) throw new Error('Unexpected command type \"' + i.type + '\" at index ' + e + \".\");\n      r += (i.relative ? \"a\" : \"A\") + i.rX + \" \" + i.rY + \" \" + i.xRot + \" \" + +i.lArcFlag + \" \" + +i.sweepFlag + \" \" + i.x + \" \" + i.y;\n    }\n  }\n\n  return r;\n}\n\nfunction i(t, r) {\n  var e = t[0],\n      i = t[1];\n  return [e * Math.cos(r) - i * Math.sin(r), e * Math.sin(r) + i * Math.cos(r)];\n}\n\nfunction a() {\n  for (var t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];\n\n  for (var e = 0; e < t.length; e++) if (\"number\" != typeof t[e]) throw new Error(\"assertNumbers arguments[\" + e + \"] is not a number. \" + typeof t[e] + \" == typeof \" + t[e]);\n\n  return !0;\n}\n\nvar n = Math.PI;\n\nfunction o(t, r, e) {\n  t.lArcFlag = 0 === t.lArcFlag ? 0 : 1, t.sweepFlag = 0 === t.sweepFlag ? 0 : 1;\n  var a = t.rX,\n      o = t.rY,\n      s = t.x,\n      u = t.y;\n  a = Math.abs(t.rX), o = Math.abs(t.rY);\n  var h = i([(r - s) / 2, (e - u) / 2], -t.xRot / 180 * n),\n      c = h[0],\n      y = h[1],\n      p = Math.pow(c, 2) / Math.pow(a, 2) + Math.pow(y, 2) / Math.pow(o, 2);\n  1 < p && (a *= Math.sqrt(p), o *= Math.sqrt(p)), t.rX = a, t.rY = o;\n  var m = Math.pow(a, 2) * Math.pow(y, 2) + Math.pow(o, 2) * Math.pow(c, 2),\n      O = (t.lArcFlag !== t.sweepFlag ? 1 : -1) * Math.sqrt(Math.max(0, (Math.pow(a, 2) * Math.pow(o, 2) - m) / m)),\n      T = a * y / o * O,\n      v = -o * c / a * O,\n      l = i([T, v], t.xRot / 180 * n);\n  t.cX = l[0] + (r + s) / 2, t.cY = l[1] + (e + u) / 2, t.phi1 = Math.atan2((y - v) / o, (c - T) / a), t.phi2 = Math.atan2((-y - v) / o, (-c - T) / a), 0 === t.sweepFlag && t.phi2 > t.phi1 && (t.phi2 -= 2 * n), 1 === t.sweepFlag && t.phi2 < t.phi1 && (t.phi2 += 2 * n), t.phi1 *= 180 / n, t.phi2 *= 180 / n;\n}\n\nfunction s(t, r, e) {\n  a(t, r, e);\n  var i = t * t + r * r - e * e;\n  if (0 > i) return [];\n  if (0 === i) return [[t * e / (t * t + r * r), r * e / (t * t + r * r)]];\n  var n = Math.sqrt(i);\n  return [[(t * e + r * n) / (t * t + r * r), (r * e - t * n) / (t * t + r * r)], [(t * e - r * n) / (t * t + r * r), (r * e + t * n) / (t * t + r * r)]];\n}\n\nvar u,\n    h = Math.PI / 180;\n\nfunction c(t, r, e) {\n  return (1 - e) * t + e * r;\n}\n\nfunction y(t, r, e, i) {\n  return t + Math.cos(i / 180 * n) * r + Math.sin(i / 180 * n) * e;\n}\n\nfunction p(t, r, e, i) {\n  var a = r - t,\n      n = e - r,\n      o = 3 * a + 3 * (i - e) - 6 * n,\n      s = 6 * (n - a),\n      u = 3 * a;\n  return Math.abs(o) < 1e-6 ? [-u / s] : function (t, r, e) {\n    void 0 === e && (e = 1e-6);\n    var i = t * t / 4 - r;\n    if (i < -e) return [];\n    if (i <= e) return [-t / 2];\n    var a = Math.sqrt(i);\n    return [-t / 2 - a, -t / 2 + a];\n  }(s / o, u / o, 1e-6);\n}\n\nfunction m(t, r, e, i, a) {\n  var n = 1 - a;\n  return t * (n * n * n) + r * (3 * n * n * a) + e * (3 * n * a * a) + i * (a * a * a);\n}\n\n!function (t) {\n  function r() {\n    return u(function (t, r, e) {\n      return t.relative && (void 0 !== t.x1 && (t.x1 += r), void 0 !== t.y1 && (t.y1 += e), void 0 !== t.x2 && (t.x2 += r), void 0 !== t.y2 && (t.y2 += e), void 0 !== t.x && (t.x += r), void 0 !== t.y && (t.y += e), t.relative = !1), t;\n    });\n  }\n\n  function e() {\n    var t = NaN,\n        r = NaN,\n        e = NaN,\n        i = NaN;\n    return u(function (a, n, o) {\n      return a.type & f.SMOOTH_CURVE_TO && (a.type = f.CURVE_TO, t = isNaN(t) ? n : t, r = isNaN(r) ? o : r, a.x1 = a.relative ? n - t : 2 * n - t, a.y1 = a.relative ? o - r : 2 * o - r), a.type & f.CURVE_TO ? (t = a.relative ? n + a.x2 : a.x2, r = a.relative ? o + a.y2 : a.y2) : (t = NaN, r = NaN), a.type & f.SMOOTH_QUAD_TO && (a.type = f.QUAD_TO, e = isNaN(e) ? n : e, i = isNaN(i) ? o : i, a.x1 = a.relative ? n - e : 2 * n - e, a.y1 = a.relative ? o - i : 2 * o - i), a.type & f.QUAD_TO ? (e = a.relative ? n + a.x1 : a.x1, i = a.relative ? o + a.y1 : a.y1) : (e = NaN, i = NaN), a;\n    });\n  }\n\n  function n() {\n    var t = NaN,\n        r = NaN;\n    return u(function (e, i, a) {\n      if (e.type & f.SMOOTH_QUAD_TO && (e.type = f.QUAD_TO, t = isNaN(t) ? i : t, r = isNaN(r) ? a : r, e.x1 = e.relative ? i - t : 2 * i - t, e.y1 = e.relative ? a - r : 2 * a - r), e.type & f.QUAD_TO) {\n        t = e.relative ? i + e.x1 : e.x1, r = e.relative ? a + e.y1 : e.y1;\n        var n = e.x1,\n            o = e.y1;\n        e.type = f.CURVE_TO, e.x1 = ((e.relative ? 0 : i) + 2 * n) / 3, e.y1 = ((e.relative ? 0 : a) + 2 * o) / 3, e.x2 = (e.x + 2 * n) / 3, e.y2 = (e.y + 2 * o) / 3;\n      } else t = NaN, r = NaN;\n\n      return e;\n    });\n  }\n\n  function u(t) {\n    var r = 0,\n        e = 0,\n        i = NaN,\n        a = NaN;\n    return function (n) {\n      if (isNaN(i) && !(n.type & f.MOVE_TO)) throw new Error(\"path must start with moveto\");\n      var o = t(n, r, e, i, a);\n      return n.type & f.CLOSE_PATH && (r = i, e = a), void 0 !== n.x && (r = n.relative ? r + n.x : n.x), void 0 !== n.y && (e = n.relative ? e + n.y : n.y), n.type & f.MOVE_TO && (i = r, a = e), o;\n    };\n  }\n\n  function O(t, r, e, i, n, o) {\n    return a(t, r, e, i, n, o), u(function (a, s, u, h) {\n      var c = a.x1,\n          y = a.x2,\n          p = a.relative && !isNaN(h),\n          m = void 0 !== a.x ? a.x : p ? 0 : s,\n          O = void 0 !== a.y ? a.y : p ? 0 : u;\n\n      function T(t) {\n        return t * t;\n      }\n\n      a.type & f.HORIZ_LINE_TO && 0 !== r && (a.type = f.LINE_TO, a.y = a.relative ? 0 : u), a.type & f.VERT_LINE_TO && 0 !== e && (a.type = f.LINE_TO, a.x = a.relative ? 0 : s), void 0 !== a.x && (a.x = a.x * t + O * e + (p ? 0 : n)), void 0 !== a.y && (a.y = m * r + a.y * i + (p ? 0 : o)), void 0 !== a.x1 && (a.x1 = a.x1 * t + a.y1 * e + (p ? 0 : n)), void 0 !== a.y1 && (a.y1 = c * r + a.y1 * i + (p ? 0 : o)), void 0 !== a.x2 && (a.x2 = a.x2 * t + a.y2 * e + (p ? 0 : n)), void 0 !== a.y2 && (a.y2 = y * r + a.y2 * i + (p ? 0 : o));\n      var v = t * i - r * e;\n      if (void 0 !== a.xRot && (1 !== t || 0 !== r || 0 !== e || 1 !== i)) if (0 === v) delete a.rX, delete a.rY, delete a.xRot, delete a.lArcFlag, delete a.sweepFlag, a.type = f.LINE_TO;else {\n        var l = a.xRot * Math.PI / 180,\n            _ = Math.sin(l),\n            N = Math.cos(l),\n            x = 1 / T(a.rX),\n            d = 1 / T(a.rY),\n            A = T(N) * x + T(_) * d,\n            E = 2 * _ * N * (x - d),\n            C = T(_) * x + T(N) * d,\n            M = A * i * i - E * r * i + C * r * r,\n            R = E * (t * i + r * e) - 2 * (A * e * i + C * t * r),\n            g = A * e * e - E * t * e + C * t * t,\n            I = (Math.atan2(R, M - g) + Math.PI) % Math.PI / 2,\n            S = Math.sin(I),\n            L = Math.cos(I);\n\n        a.rX = Math.abs(v) / Math.sqrt(M * T(L) + R * S * L + g * T(S)), a.rY = Math.abs(v) / Math.sqrt(M * T(S) - R * S * L + g * T(L)), a.xRot = 180 * I / Math.PI;\n      }\n      return void 0 !== a.sweepFlag && 0 > v && (a.sweepFlag = +!a.sweepFlag), a;\n    });\n  }\n\n  function T() {\n    return function (t) {\n      var r = {};\n\n      for (var e in t) r[e] = t[e];\n\n      return r;\n    };\n  }\n\n  t.ROUND = function (t) {\n    function r(r) {\n      return Math.round(r * t) / t;\n    }\n\n    return void 0 === t && (t = 1e13), a(t), function (t) {\n      return void 0 !== t.x1 && (t.x1 = r(t.x1)), void 0 !== t.y1 && (t.y1 = r(t.y1)), void 0 !== t.x2 && (t.x2 = r(t.x2)), void 0 !== t.y2 && (t.y2 = r(t.y2)), void 0 !== t.x && (t.x = r(t.x)), void 0 !== t.y && (t.y = r(t.y)), void 0 !== t.rX && (t.rX = r(t.rX)), void 0 !== t.rY && (t.rY = r(t.rY)), t;\n    };\n  }, t.TO_ABS = r, t.TO_REL = function () {\n    return u(function (t, r, e) {\n      return t.relative || (void 0 !== t.x1 && (t.x1 -= r), void 0 !== t.y1 && (t.y1 -= e), void 0 !== t.x2 && (t.x2 -= r), void 0 !== t.y2 && (t.y2 -= e), void 0 !== t.x && (t.x -= r), void 0 !== t.y && (t.y -= e), t.relative = !0), t;\n    });\n  }, t.NORMALIZE_HVZ = function (t, r, e) {\n    return void 0 === t && (t = !0), void 0 === r && (r = !0), void 0 === e && (e = !0), u(function (i, a, n, o, s) {\n      if (isNaN(o) && !(i.type & f.MOVE_TO)) throw new Error(\"path must start with moveto\");\n      return r && i.type & f.HORIZ_LINE_TO && (i.type = f.LINE_TO, i.y = i.relative ? 0 : n), e && i.type & f.VERT_LINE_TO && (i.type = f.LINE_TO, i.x = i.relative ? 0 : a), t && i.type & f.CLOSE_PATH && (i.type = f.LINE_TO, i.x = i.relative ? o - a : o, i.y = i.relative ? s - n : s), i.type & f.ARC && (0 === i.rX || 0 === i.rY) && (i.type = f.LINE_TO, delete i.rX, delete i.rY, delete i.xRot, delete i.lArcFlag, delete i.sweepFlag), i;\n    });\n  }, t.NORMALIZE_ST = e, t.QT_TO_C = n, t.INFO = u, t.SANITIZE = function (t) {\n    void 0 === t && (t = 0), a(t);\n    var r = NaN,\n        e = NaN,\n        i = NaN,\n        n = NaN;\n    return u(function (a, o, s, u, h) {\n      var c = Math.abs,\n          y = !1,\n          p = 0,\n          m = 0;\n\n      if (a.type & f.SMOOTH_CURVE_TO && (p = isNaN(r) ? 0 : o - r, m = isNaN(e) ? 0 : s - e), a.type & (f.CURVE_TO | f.SMOOTH_CURVE_TO) ? (r = a.relative ? o + a.x2 : a.x2, e = a.relative ? s + a.y2 : a.y2) : (r = NaN, e = NaN), a.type & f.SMOOTH_QUAD_TO ? (i = isNaN(i) ? o : 2 * o - i, n = isNaN(n) ? s : 2 * s - n) : a.type & f.QUAD_TO ? (i = a.relative ? o + a.x1 : a.x1, n = a.relative ? s + a.y1 : a.y2) : (i = NaN, n = NaN), a.type & f.LINE_COMMANDS || a.type & f.ARC && (0 === a.rX || 0 === a.rY || !a.lArcFlag) || a.type & f.CURVE_TO || a.type & f.SMOOTH_CURVE_TO || a.type & f.QUAD_TO || a.type & f.SMOOTH_QUAD_TO) {\n        var O = void 0 === a.x ? 0 : a.relative ? a.x : a.x - o,\n            T = void 0 === a.y ? 0 : a.relative ? a.y : a.y - s;\n        p = isNaN(i) ? void 0 === a.x1 ? p : a.relative ? a.x : a.x1 - o : i - o, m = isNaN(n) ? void 0 === a.y1 ? m : a.relative ? a.y : a.y1 - s : n - s;\n        var v = void 0 === a.x2 ? 0 : a.relative ? a.x : a.x2 - o,\n            l = void 0 === a.y2 ? 0 : a.relative ? a.y : a.y2 - s;\n        c(O) <= t && c(T) <= t && c(p) <= t && c(m) <= t && c(v) <= t && c(l) <= t && (y = !0);\n      }\n\n      return a.type & f.CLOSE_PATH && c(o - u) <= t && c(s - h) <= t && (y = !0), y ? [] : a;\n    });\n  }, t.MATRIX = O, t.ROTATE = function (t, r, e) {\n    void 0 === r && (r = 0), void 0 === e && (e = 0), a(t, r, e);\n    var i = Math.sin(t),\n        n = Math.cos(t);\n    return O(n, i, -i, n, r - r * n + e * i, e - r * i - e * n);\n  }, t.TRANSLATE = function (t, r) {\n    return void 0 === r && (r = 0), a(t, r), O(1, 0, 0, 1, t, r);\n  }, t.SCALE = function (t, r) {\n    return void 0 === r && (r = t), a(t, r), O(t, 0, 0, r, 0, 0);\n  }, t.SKEW_X = function (t) {\n    return a(t), O(1, 0, Math.atan(t), 1, 0, 0);\n  }, t.SKEW_Y = function (t) {\n    return a(t), O(1, Math.atan(t), 0, 1, 0, 0);\n  }, t.X_AXIS_SYMMETRY = function (t) {\n    return void 0 === t && (t = 0), a(t), O(-1, 0, 0, 1, t, 0);\n  }, t.Y_AXIS_SYMMETRY = function (t) {\n    return void 0 === t && (t = 0), a(t), O(1, 0, 0, -1, 0, t);\n  }, t.A_TO_C = function () {\n    return u(function (t, r, e) {\n      return f.ARC === t.type ? function (t, r, e) {\n        var a, n, s, u;\n        t.cX || o(t, r, e);\n\n        for (var y = Math.min(t.phi1, t.phi2), p = Math.max(t.phi1, t.phi2) - y, m = Math.ceil(p / 90), O = new Array(m), T = r, v = e, l = 0; l < m; l++) {\n          var _ = c(t.phi1, t.phi2, l / m),\n              N = c(t.phi1, t.phi2, (l + 1) / m),\n              x = N - _,\n              d = 4 / 3 * Math.tan(x * h / 4),\n              A = [Math.cos(_ * h) - d * Math.sin(_ * h), Math.sin(_ * h) + d * Math.cos(_ * h)],\n              E = A[0],\n              C = A[1],\n              M = [Math.cos(N * h), Math.sin(N * h)],\n              R = M[0],\n              g = M[1],\n              I = [R + d * Math.sin(N * h), g - d * Math.cos(N * h)],\n              S = I[0],\n              L = I[1];\n\n          O[l] = {\n            relative: t.relative,\n            type: f.CURVE_TO\n          };\n\n          var H = function (r, e) {\n            var a = i([r * t.rX, e * t.rY], t.xRot),\n                n = a[0],\n                o = a[1];\n            return [t.cX + n, t.cY + o];\n          };\n\n          a = H(E, C), O[l].x1 = a[0], O[l].y1 = a[1], n = H(S, L), O[l].x2 = n[0], O[l].y2 = n[1], s = H(R, g), O[l].x = s[0], O[l].y = s[1], t.relative && (O[l].x1 -= T, O[l].y1 -= v, O[l].x2 -= T, O[l].y2 -= v, O[l].x -= T, O[l].y -= v), T = (u = [O[l].x, O[l].y])[0], v = u[1];\n        }\n\n        return O;\n      }(t, t.relative ? 0 : r, t.relative ? 0 : e) : t;\n    });\n  }, t.ANNOTATE_ARCS = function () {\n    return u(function (t, r, e) {\n      return t.relative && (r = 0, e = 0), f.ARC === t.type && o(t, r, e), t;\n    });\n  }, t.CLONE = T, t.CALCULATE_BOUNDS = function () {\n    var t = function (t) {\n      var r = {};\n\n      for (var e in t) r[e] = t[e];\n\n      return r;\n    },\n        i = r(),\n        a = n(),\n        h = e(),\n        c = u(function (r, e, n) {\n      var u = h(a(i(t(r))));\n\n      function O(t) {\n        t > c.maxX && (c.maxX = t), t < c.minX && (c.minX = t);\n      }\n\n      function T(t) {\n        t > c.maxY && (c.maxY = t), t < c.minY && (c.minY = t);\n      }\n\n      if (u.type & f.DRAWING_COMMANDS && (O(e), T(n)), u.type & f.HORIZ_LINE_TO && O(u.x), u.type & f.VERT_LINE_TO && T(u.y), u.type & f.LINE_TO && (O(u.x), T(u.y)), u.type & f.CURVE_TO) {\n        O(u.x), T(u.y);\n\n        for (var v = 0, l = p(e, u.x1, u.x2, u.x); v < l.length; v++) {\n          0 < (w = l[v]) && 1 > w && O(m(e, u.x1, u.x2, u.x, w));\n        }\n\n        for (var _ = 0, N = p(n, u.y1, u.y2, u.y); _ < N.length; _++) {\n          0 < (w = N[_]) && 1 > w && T(m(n, u.y1, u.y2, u.y, w));\n        }\n      }\n\n      if (u.type & f.ARC) {\n        O(u.x), T(u.y), o(u, e, n);\n\n        for (var x = u.xRot / 180 * Math.PI, d = Math.cos(x) * u.rX, A = Math.sin(x) * u.rX, E = -Math.sin(x) * u.rY, C = Math.cos(x) * u.rY, M = u.phi1 < u.phi2 ? [u.phi1, u.phi2] : -180 > u.phi2 ? [u.phi2 + 360, u.phi1 + 360] : [u.phi2, u.phi1], R = M[0], g = M[1], I = function (t) {\n          var r = t[0],\n              e = t[1],\n              i = 180 * Math.atan2(e, r) / Math.PI;\n          return i < R ? i + 360 : i;\n        }, S = 0, L = s(E, -d, 0).map(I); S < L.length; S++) {\n          (w = L[S]) > R && w < g && O(y(u.cX, d, E, w));\n        }\n\n        for (var H = 0, U = s(C, -A, 0).map(I); H < U.length; H++) {\n          var w;\n          (w = U[H]) > R && w < g && T(y(u.cY, A, C, w));\n        }\n      }\n\n      return r;\n    });\n\n    return c.minX = 1 / 0, c.maxX = -1 / 0, c.minY = 1 / 0, c.maxY = -1 / 0, c;\n  };\n}(u || (u = {}));\n\nvar O,\n    T = function () {\n  function t() {}\n\n  return t.prototype.round = function (t) {\n    return this.transform(u.ROUND(t));\n  }, t.prototype.toAbs = function () {\n    return this.transform(u.TO_ABS());\n  }, t.prototype.toRel = function () {\n    return this.transform(u.TO_REL());\n  }, t.prototype.normalizeHVZ = function (t, r, e) {\n    return this.transform(u.NORMALIZE_HVZ(t, r, e));\n  }, t.prototype.normalizeST = function () {\n    return this.transform(u.NORMALIZE_ST());\n  }, t.prototype.qtToC = function () {\n    return this.transform(u.QT_TO_C());\n  }, t.prototype.aToC = function () {\n    return this.transform(u.A_TO_C());\n  }, t.prototype.sanitize = function (t) {\n    return this.transform(u.SANITIZE(t));\n  }, t.prototype.translate = function (t, r) {\n    return this.transform(u.TRANSLATE(t, r));\n  }, t.prototype.scale = function (t, r) {\n    return this.transform(u.SCALE(t, r));\n  }, t.prototype.rotate = function (t, r, e) {\n    return this.transform(u.ROTATE(t, r, e));\n  }, t.prototype.matrix = function (t, r, e, i, a, n) {\n    return this.transform(u.MATRIX(t, r, e, i, a, n));\n  }, t.prototype.skewX = function (t) {\n    return this.transform(u.SKEW_X(t));\n  }, t.prototype.skewY = function (t) {\n    return this.transform(u.SKEW_Y(t));\n  }, t.prototype.xSymmetry = function (t) {\n    return this.transform(u.X_AXIS_SYMMETRY(t));\n  }, t.prototype.ySymmetry = function (t) {\n    return this.transform(u.Y_AXIS_SYMMETRY(t));\n  }, t.prototype.annotateArcs = function () {\n    return this.transform(u.ANNOTATE_ARCS());\n  }, t;\n}(),\n    v = function (t) {\n  return \" \" === t || \"\\t\" === t || \"\\r\" === t || \"\\n\" === t;\n},\n    l = function (t) {\n  return \"0\".charCodeAt(0) <= t.charCodeAt(0) && t.charCodeAt(0) <= \"9\".charCodeAt(0);\n},\n    _ = function (t) {\n  function e() {\n    var r = t.call(this) || this;\n    return r.curNumber = \"\", r.curCommandType = -1, r.curCommandRelative = !1, r.canParseCommandOrComma = !0, r.curNumberHasExp = !1, r.curNumberHasExpDigits = !1, r.curNumberHasDecimal = !1, r.curArgs = [], r;\n  }\n\n  return r(e, t), e.prototype.finish = function (t) {\n    if (void 0 === t && (t = []), this.parse(\" \", t), 0 !== this.curArgs.length || !this.canParseCommandOrComma) throw new SyntaxError(\"Unterminated command at the path end.\");\n    return t;\n  }, e.prototype.parse = function (t, r) {\n    var e = this;\n    void 0 === r && (r = []);\n\n    for (var i = function (t) {\n      r.push(t), e.curArgs.length = 0, e.canParseCommandOrComma = !0;\n    }, a = 0; a < t.length; a++) {\n      var n = t[a],\n          o = !(this.curCommandType !== f.ARC || 3 !== this.curArgs.length && 4 !== this.curArgs.length || 1 !== this.curNumber.length || \"0\" !== this.curNumber && \"1\" !== this.curNumber),\n          s = l(n) && (\"0\" === this.curNumber && \"0\" === n || o);\n      if (!l(n) || s) {\n        if (\"e\" !== n && \"E\" !== n) {\n          if (\"-\" !== n && \"+\" !== n || !this.curNumberHasExp || this.curNumberHasExpDigits) {\n            if (\".\" !== n || this.curNumberHasExp || this.curNumberHasDecimal || o) {\n              if (this.curNumber && -1 !== this.curCommandType) {\n                var u = Number(this.curNumber);\n                if (isNaN(u)) throw new SyntaxError(\"Invalid number ending at \" + a);\n                if (this.curCommandType === f.ARC) if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n                  if (0 > u) throw new SyntaxError('Expected positive number, got \"' + u + '\" at index \"' + a + '\"');\n                } else if ((3 === this.curArgs.length || 4 === this.curArgs.length) && \"0\" !== this.curNumber && \"1\" !== this.curNumber) throw new SyntaxError('Expected a flag, got \"' + this.curNumber + '\" at index \"' + a + '\"');\n                this.curArgs.push(u), this.curArgs.length === N[this.curCommandType] && (f.HORIZ_LINE_TO === this.curCommandType ? i({\n                  type: f.HORIZ_LINE_TO,\n                  relative: this.curCommandRelative,\n                  x: u\n                }) : f.VERT_LINE_TO === this.curCommandType ? i({\n                  type: f.VERT_LINE_TO,\n                  relative: this.curCommandRelative,\n                  y: u\n                }) : this.curCommandType === f.MOVE_TO || this.curCommandType === f.LINE_TO || this.curCommandType === f.SMOOTH_QUAD_TO ? (i({\n                  type: this.curCommandType,\n                  relative: this.curCommandRelative,\n                  x: this.curArgs[0],\n                  y: this.curArgs[1]\n                }), f.MOVE_TO === this.curCommandType && (this.curCommandType = f.LINE_TO)) : this.curCommandType === f.CURVE_TO ? i({\n                  type: f.CURVE_TO,\n                  relative: this.curCommandRelative,\n                  x1: this.curArgs[0],\n                  y1: this.curArgs[1],\n                  x2: this.curArgs[2],\n                  y2: this.curArgs[3],\n                  x: this.curArgs[4],\n                  y: this.curArgs[5]\n                }) : this.curCommandType === f.SMOOTH_CURVE_TO ? i({\n                  type: f.SMOOTH_CURVE_TO,\n                  relative: this.curCommandRelative,\n                  x2: this.curArgs[0],\n                  y2: this.curArgs[1],\n                  x: this.curArgs[2],\n                  y: this.curArgs[3]\n                }) : this.curCommandType === f.QUAD_TO ? i({\n                  type: f.QUAD_TO,\n                  relative: this.curCommandRelative,\n                  x1: this.curArgs[0],\n                  y1: this.curArgs[1],\n                  x: this.curArgs[2],\n                  y: this.curArgs[3]\n                }) : this.curCommandType === f.ARC && i({\n                  type: f.ARC,\n                  relative: this.curCommandRelative,\n                  rX: this.curArgs[0],\n                  rY: this.curArgs[1],\n                  xRot: this.curArgs[2],\n                  lArcFlag: this.curArgs[3],\n                  sweepFlag: this.curArgs[4],\n                  x: this.curArgs[5],\n                  y: this.curArgs[6]\n                })), this.curNumber = \"\", this.curNumberHasExpDigits = !1, this.curNumberHasExp = !1, this.curNumberHasDecimal = !1, this.canParseCommandOrComma = !0;\n              }\n\n              if (!v(n)) if (\",\" === n && this.canParseCommandOrComma) this.canParseCommandOrComma = !1;else if (\"+\" !== n && \"-\" !== n && \".\" !== n) {\n                if (s) this.curNumber = n, this.curNumberHasDecimal = !1;else {\n                  if (0 !== this.curArgs.length) throw new SyntaxError(\"Unterminated command at index \" + a + \".\");\n                  if (!this.canParseCommandOrComma) throw new SyntaxError('Unexpected character \"' + n + '\" at index ' + a + \". Command cannot follow comma\");\n                  if (this.canParseCommandOrComma = !1, \"z\" !== n && \"Z\" !== n) {\n                    if (\"h\" === n || \"H\" === n) this.curCommandType = f.HORIZ_LINE_TO, this.curCommandRelative = \"h\" === n;else if (\"v\" === n || \"V\" === n) this.curCommandType = f.VERT_LINE_TO, this.curCommandRelative = \"v\" === n;else if (\"m\" === n || \"M\" === n) this.curCommandType = f.MOVE_TO, this.curCommandRelative = \"m\" === n;else if (\"l\" === n || \"L\" === n) this.curCommandType = f.LINE_TO, this.curCommandRelative = \"l\" === n;else if (\"c\" === n || \"C\" === n) this.curCommandType = f.CURVE_TO, this.curCommandRelative = \"c\" === n;else if (\"s\" === n || \"S\" === n) this.curCommandType = f.SMOOTH_CURVE_TO, this.curCommandRelative = \"s\" === n;else if (\"q\" === n || \"Q\" === n) this.curCommandType = f.QUAD_TO, this.curCommandRelative = \"q\" === n;else if (\"t\" === n || \"T\" === n) this.curCommandType = f.SMOOTH_QUAD_TO, this.curCommandRelative = \"t\" === n;else {\n                      if (\"a\" !== n && \"A\" !== n) throw new SyntaxError('Unexpected character \"' + n + '\" at index ' + a + \".\");\n                      this.curCommandType = f.ARC, this.curCommandRelative = \"a\" === n;\n                    }\n                  } else r.push({\n                    type: f.CLOSE_PATH\n                  }), this.canParseCommandOrComma = !0, this.curCommandType = -1;\n                }\n              } else this.curNumber = n, this.curNumberHasDecimal = \".\" === n;\n            } else this.curNumber += n, this.curNumberHasDecimal = !0;\n          } else this.curNumber += n;\n        } else this.curNumber += n, this.curNumberHasExp = !0;\n      } else this.curNumber += n, this.curNumberHasExpDigits = this.curNumberHasExp;\n    }\n\n    return r;\n  }, e.prototype.transform = function (t) {\n    return Object.create(this, {\n      parse: {\n        value: function (r, e) {\n          void 0 === e && (e = []);\n\n          for (var i = 0, a = Object.getPrototypeOf(this).parse.call(this, r); i < a.length; i++) {\n            var n = a[i],\n                o = t(n);\n            Array.isArray(o) ? e.push.apply(e, o) : e.push(o);\n          }\n\n          return e;\n        }\n      }\n    });\n  }, e;\n}(T),\n    f = function (t) {\n  function i(r) {\n    var e = t.call(this) || this;\n    return e.commands = \"string\" == typeof r ? i.parse(r) : r, e;\n  }\n\n  return r(i, t), i.prototype.encode = function () {\n    return i.encode(this.commands);\n  }, i.prototype.getBounds = function () {\n    var t = u.CALCULATE_BOUNDS();\n    return this.transform(t), t;\n  }, i.prototype.transform = function (t) {\n    for (var r = [], e = 0, i = this.commands; e < i.length; e++) {\n      var a = t(i[e]);\n      Array.isArray(a) ? r.push.apply(r, a) : r.push(a);\n    }\n\n    return this.commands = r, this;\n  }, i.encode = function (t) {\n    return e(t);\n  }, i.parse = function (t) {\n    var r = new _(),\n        e = [];\n    return r.parse(t, e), r.finish(e), e;\n  }, i.CLOSE_PATH = 1, i.MOVE_TO = 2, i.HORIZ_LINE_TO = 4, i.VERT_LINE_TO = 8, i.LINE_TO = 16, i.CURVE_TO = 32, i.SMOOTH_CURVE_TO = 64, i.QUAD_TO = 128, i.SMOOTH_QUAD_TO = 256, i.ARC = 512, i.LINE_COMMANDS = i.LINE_TO | i.HORIZ_LINE_TO | i.VERT_LINE_TO, i.DRAWING_COMMANDS = i.HORIZ_LINE_TO | i.VERT_LINE_TO | i.LINE_TO | i.CURVE_TO | i.SMOOTH_CURVE_TO | i.QUAD_TO | i.SMOOTH_QUAD_TO | i.ARC, i;\n}(T),\n    N = ((O = {})[f.MOVE_TO] = 2, O[f.LINE_TO] = 2, O[f.HORIZ_LINE_TO] = 1, O[f.VERT_LINE_TO] = 1, O[f.CLOSE_PATH] = 0, O[f.QUAD_TO] = 4, O[f.SMOOTH_QUAD_TO] = 2, O[f.CURVE_TO] = 6, O[f.SMOOTH_CURVE_TO] = 4, O[f.ARC] = 7, O);\n\nexport { N as COMMAND_ARG_COUNTS, f as SVGPathData, _ as SVGPathDataParser, u as SVGPathDataTransformer, e as encodeSVGPath };","map":{"version":3,"mappings":"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","names":["encodeSVGPath","commands","str","Array","isArray","i","length","command","type","SVGPathData","CLOSE_PATH","HORIZ_LINE_TO","relative","x","VERT_LINE_TO","y","MOVE_TO","LINE_TO","CURVE_TO","x1","y1","x2","y2","SMOOTH_CURVE_TO","QUAD_TO","SMOOTH_QUAD_TO","ARC","Error","rX","rY","xRot","lArcFlag","sweepFlag","rotate","_a","rad","Math","cos","sin","assertNumbers","_i","numbers","PI","annotateArcCommand","c","abs","x1_","y1_","testValue","pow","sqrt","c_ScaleTemp","c_Scale","max","cx_","cy_","cRot","cX","cY","phi1","atan2","phi2","intersectionUnitCircleLine","a","b","termSqr","term","SVGPathDataTransformer","DEG","lerp","t","arcAt","phiDeg","bezierRoot","x0","x3","x01","x12","p","q","PRECISION","discriminantX4","root","pqFormula","bezierAt","s","TO_ABS","INFO","prevX","prevY","NORMALIZE_ST","prevCurveC2X","NaN","prevCurveC2Y","prevQuadCX","prevQuadCY","isNaN","QT_TO_C","prevQuadX1","prevQuadY1","f","prevXAbs","prevYAbs","pathStartXAbs","pathStartYAbs","result","MATRIX","d","e","pathStartX","origX1","origX2","comRel","sqr","det","sinRot","cosRot","xCurve","yCurve","A","B","C","A1","B1","C1","newXRot","newSinRot","newCosRot","CLONE","key","roundVal","rf","val","round","normalizeZ","normalizeH","normalizeV","pathStartY","EPS","skip","x1Rel","y1Rel","LINE_COMMANDS","xRel","yRel","x2Rel","y2Rel","dX","dY","atan","xOffset","yOffset","arc","y0","phiMin","min","deltaPhi","partCount","ceil","phiStart","phiEnd","deltaPhi_1","tan","_e","_f","_g","transform","xTemp","yTemp","_b","_c","_d","a2c","clone","toAbs","qtToC","normST","fixX","absX","maxX","minX","fixY","absY","maxY","minY","DRAWING_COMMANDS","xDerivRoots_1","derivRoot","yDerivRoots_1","xRotRad","x90","y90","phiMin_1","phiMax","normalizeXiEta","xi","eta","phi","xDerivRoots_2","map","yDerivRoots_2","Infinity","TransformableSVG","this","ROUND","TO_REL","NORMALIZE_HVZ","A_TO_C","eps","SANITIZE","TRANSLATE","SCALE","ROTATE","SKEW_X","SKEW_Y","X_AXIS_SYMMETRY","Y_AXIS_SYMMETRY","ANNOTATE_ARCS","isWhiteSpace","isDigit","charCodeAt","_","_super","_this","r","__extends","SVGPathDataParser","parse","curArgs","canParseCommandOrComma","SyntaxError","finishCommand","push","isAArcFlag","curCommandType","curNumber","isEndingDigit","curNumberHasExp","curNumberHasExpDigits","curNumberHasDecimal","Number","COMMAND_ARG_COUNTS","curCommandRelative","Object","create","value","chunk","parsedCommands_1","getPrototypeOf","call","cT","content","encode","boundsTransform","CALCULATE_BOUNDS","transformFunction","newCommands","transformedCommand","path","parser","finish","O"],"sources":["../src/SVGPathDataEncoder.ts","../src/mathUtils.ts","../src/SVGPathDataTransformer.ts","../src/TransformableSVG.ts","../src/SVGPathDataParser.ts","../src/SVGPathData.ts"],"sourcesContent":["import { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand } from \"./types\";\n\n// Encode SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\n// Private consts : Char groups\nconst WSP = \" \";\n\nexport function encodeSVGPath(commands: SVGCommand | SVGCommand[]) {\n  let str = \"\";\n\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    if (command.type === SVGPathData.CLOSE_PATH) {\n      str += \"z\";\n    } else if (command.type === SVGPathData.HORIZ_LINE_TO) {\n      str += (command.relative ? \"h\" : \"H\") +\n        command.x;\n    } else if (command.type === SVGPathData.VERT_LINE_TO) {\n      str += (command.relative ? \"v\" : \"V\") +\n        command.y;\n    } else if (command.type === SVGPathData.MOVE_TO) {\n      str += (command.relative ? \"m\" : \"M\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.LINE_TO) {\n      str += (command.relative ? \"l\" : \"L\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.CURVE_TO) {\n      str += (command.relative ? \"c\" : \"C\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_CURVE_TO) {\n      str += (command.relative ? \"s\" : \"S\") +\n        command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.QUAD_TO) {\n      str += (command.relative ? \"q\" : \"Q\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_QUAD_TO) {\n      str += (command.relative ? \"t\" : \"T\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.ARC) {\n      str += (command.relative ? \"a\" : \"A\") +\n        command.rX + WSP + command.rY +\n        WSP + command.xRot +\n        WSP + (+command.lArcFlag) + WSP + (+command.sweepFlag) +\n        WSP + command.x + WSP + command.y;\n    } else {\n      // Unknown command\n      throw new Error(\n        `Unexpected command type \"${ (command as any).type}\" at index ${i}.`);\n    }\n  }\n\n  return str;\n}\n","import { SVGPathData } from \"./SVGPathData\";\nimport { CommandA, CommandC } from \"./types\";\n\nexport function rotate([x, y]: [number, number], rad: number) {\n  return [\n    x * Math.cos(rad) - y * Math.sin(rad),\n    x * Math.sin(rad) + y * Math.cos(rad),\n  ];\n}\n\nconst DEBUG_CHECK_NUMBERS = true;\nexport function assertNumbers(...numbers: number[]) {\n  if (DEBUG_CHECK_NUMBERS) {\n    for (let i = 0; i < numbers.length; i++) {\n      if (\"number\" !== typeof numbers[i]) {\n        throw new Error(\n          `assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`);\n      }\n    }\n  }\n  return true;\n}\n\nconst PI = Math.PI;\n\n/**\n * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n * Fixes rX and rY.\n * Ensures lArcFlag and sweepFlag are 0 or 1\n * Adds center coordinates: command.cX, command.cY (relative or absolute, depending on command.relative)\n * Adds start and end arc parameters (in degrees): command.phi1, command.phi2; phi1 < phi2 iff. c.sweepFlag == true\n */\nexport function annotateArcCommand(c: CommandA, x1: number, y1: number) {\n  c.lArcFlag = (0 === c.lArcFlag) ? 0 : 1;\n  c.sweepFlag = (0 === c.sweepFlag) ? 0 : 1;\n  // tslint:disable-next-line\n  let {rX, rY, x, y} = c;\n\n  rX = Math.abs(c.rX);\n  rY = Math.abs(c.rY);\n  const [x1_, y1_] = rotate([(x1 - x) / 2, (y1 - y) / 2], -c.xRot / 180 * PI);\n  const testValue = Math.pow(x1_, 2) / Math.pow(rX, 2) + Math.pow(y1_, 2) / Math.pow(rY, 2);\n\n  if (1 < testValue) {\n    rX *= Math.sqrt(testValue);\n    rY *= Math.sqrt(testValue);\n  }\n  c.rX = rX;\n  c.rY = rY;\n  const c_ScaleTemp = (Math.pow(rX, 2) * Math.pow(y1_, 2) + Math.pow(rY, 2) * Math.pow(x1_, 2));\n  const c_Scale = (c.lArcFlag !== c.sweepFlag ? 1 : -1) *\n    Math.sqrt(Math.max(0, (Math.pow(rX, 2) * Math.pow(rY, 2) - c_ScaleTemp) / c_ScaleTemp));\n  const cx_ = rX * y1_ / rY * c_Scale;\n  const cy_ = -rY * x1_ / rX * c_Scale;\n  const cRot = rotate([cx_, cy_], c.xRot / 180 * PI);\n\n  c.cX = cRot[0] + (x1 + x) / 2;\n  c.cY = cRot[1] + (y1 + y) / 2;\n  c.phi1 = Math.atan2((y1_ - cy_) / rY, (x1_ - cx_) / rX);\n  c.phi2 = Math.atan2((-y1_ - cy_) / rY, (-x1_ - cx_) / rX);\n  if (0 === c.sweepFlag && c.phi2 > c.phi1) {\n    c.phi2 -= 2 * PI;\n  }\n  if (1 === c.sweepFlag && c.phi2 < c.phi1) {\n    c.phi2 += 2 * PI;\n  }\n  c.phi1 *= 180 / PI;\n  c.phi2 *= 180 / PI;\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x² + y² = 1\n * This can be understood as the intersection of the unit circle with a line.\n *      => y = (c - a x) / b\n *      => x² + (c - a x)² / b² = 1\n *      => x² b² + c² - 2 c a x + a² x² = b²\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\n */\nexport function intersectionUnitCircleLine(a: number, b: number, c: number): [number, number][] {\n  assertNumbers(a, b, c);\n  // cf. pqFormula\n  const termSqr = a * a + b * b - c * c;\n\n  if (0 > termSqr) {\n    return [];\n  } else if (0 === termSqr) {\n    return [\n      [\n        (a * c) / (a * a + b * b),\n        (b * c) / (a * a + b * b)]];\n  }\n  const term = Math.sqrt(termSqr);\n\n  return [\n    [\n      (a * c + b * term) / (a * a + b * b),\n      (b * c - a * term) / (a * a + b * b)],\n    [\n      (a * c - b * term) / (a * a + b * b),\n      (b * c + a * term) / (a * a + b * b)]];\n\n}\n\nexport const DEG = Math.PI / 180;\n\nexport function lerp(a: number, b: number, t: number) {\n  return (1 - t) * a + t * b;\n}\n\nexport function arcAt(c: number, x1: number, x2: number, phiDeg: number) {\n  return c + Math.cos(phiDeg / 180 * PI) * x1 + Math.sin(phiDeg / 180 * PI) * x2;\n}\n\nexport function bezierRoot(x0: number, x1: number, x2: number, x3: number) {\n  const EPS = 1e-6;\n  const x01 = x1 - x0;\n  const x12 = x2 - x1;\n  const x23 = x3 - x2;\n  const a = 3 * x01 + 3 * x23 - 6 * x12;\n  const b = (x12 - x01) * 6;\n  const c = 3 * x01;\n  // solve a * t² + b * t + c = 0\n\n  if (Math.abs(a) < EPS) {\n    // equivalent to b * t + c =>\n    return [-c / b];\n  }\n  return pqFormula(b / a, c / a, EPS);\n\n}\n\nexport function bezierAt(x0: number, x1: number, x2: number, x3: number, t: number) {\n  // console.log(x0, y0, x1, y1, x2, y2, x3, y3, t)\n  const s = 1 - t;\n  const c0 = s * s * s;\n  const c1 = 3 * s * s * t;\n  const c2 = 3 * s * t * t;\n  const c3 = t * t * t;\n\n  return x0 * c0 + x1 * c1 + x2 * c2 + x3 * c3;\n}\n\nfunction pqFormula(p: number, q: number, PRECISION = 1e-6) {\n  // 4 times the discriminant:in\n  const discriminantX4 = p * p / 4 - q;\n\n  if (discriminantX4 < -PRECISION) {\n    return [];\n  } else if (discriminantX4 <= PRECISION) {\n    return [-p / 2];\n  }\n  const root = Math.sqrt(discriminantX4);\n\n  return [-(p / 2) - root, -(p / 2) + root];\n\n}\n\nexport function a2c(arc: CommandA, x0: number, y0: number): CommandC[] {\n  if (!arc.cX) {\n    annotateArcCommand(arc, x0, y0);\n  }\n\n  const phiMin = Math.min(arc.phi1!, arc.phi2!), phiMax = Math.max(arc.phi1!, arc.phi2!), deltaPhi = phiMax - phiMin;\n  const partCount = Math.ceil(deltaPhi / 90 );\n\n  const result: CommandC[] = new Array(partCount);\n  let prevX = x0, prevY = y0;\n  for (let i = 0; i < partCount; i++) {\n    const phiStart = lerp(arc.phi1!, arc.phi2!, i / partCount);\n    const phiEnd = lerp(arc.phi1!, arc.phi2!, (i + 1) / partCount);\n    const deltaPhi = phiEnd - phiStart;\n    const f = 4 / 3 * Math.tan(deltaPhi * DEG / 4);\n    // x1/y1, x2/y2 and x/y coordinates on the unit circle for phiStart/phiEnd\n    const [x1, y1] = [\n      Math.cos(phiStart * DEG) - f * Math.sin(phiStart * DEG),\n      Math.sin(phiStart * DEG) + f * Math.cos(phiStart * DEG)];\n    const [x, y] = [Math.cos(phiEnd * DEG), Math.sin(phiEnd * DEG)];\n    const [x2, y2] = [x + f * Math.sin(phiEnd * DEG), y - f * Math.cos(phiEnd * DEG)];\n    result[i] = {relative: arc.relative, type: SVGPathData.CURVE_TO } as any;\n    const transform = (x: number, y: number) => {\n      const [xTemp, yTemp] = rotate([x * arc.rX, y * arc.rY], arc.xRot);\n      return [arc.cX! + xTemp, arc.cY! + yTemp];\n    };\n    [result[i].x1, result[i].y1] = transform(x1, y1);\n    [result[i].x2, result[i].y2] = transform(x2, y2);\n    [result[i].x, result[i].y] = transform(x, y);\n    if (arc.relative) {\n      result[i].x1 -= prevX;\n      result[i].y1 -= prevY;\n      result[i].x2 -= prevX;\n      result[i].y2 -= prevY;\n      result[i].x -= prevX;\n      result[i].y -= prevY;\n    }\n    [prevX, prevY] = [result[i].x, result[i].y];\n  }\n  return result;\n}\n","// Transform SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\nimport { a2c, annotateArcCommand, arcAt, assertNumbers, bezierAt, bezierRoot,\n  intersectionUnitCircleLine } from \"./mathUtils\";\nimport { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n\nexport namespace SVGPathDataTransformer {\n  // Predefined transforming functions\n  // Rounds commands values\n  export function ROUND(roundVal = 1e13) {\n    assertNumbers(roundVal);\n    function rf(val: number) { return Math.round(val * roundVal) / roundVal; }\n    return function round(command: any) {\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = rf(command.x1);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = rf(command.y1);\n      }\n\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = rf(command.x2);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = rf(command.y2);\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = rf(command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = rf(command.y);\n      }\n\n      if (\"undefined\" !== typeof command.rX) {\n        command.rX = rf(command.rX);\n      }\n      if (\"undefined\" !== typeof command.rY) {\n        command.rY = rf(command.rY);\n      }\n\n      return command;\n    };\n  }\n  // Relative to absolute commands\n  export function TO_ABS() {\n    return INFO((command, prevX, prevY) => {\n      if (command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 += prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 += prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x += prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y += prevY;\n        }\n        command.relative = false;\n      }\n      return command;\n    });\n  }\n  // Absolute to relative commands\n  export function TO_REL() {\n    return INFO((command, prevX, prevY) => {\n      if (!command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 -= prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 -= prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y -= prevY;\n        }\n        command.relative = true;\n      }\n      return command;\n    });\n  }\n  // Convert H, V, Z and A with rX = 0 to L\n  export function NORMALIZE_HVZ(normalizeZ = true, normalizeH = true, normalizeV = true) {\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      if (isNaN(pathStartX) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n      if (normalizeH && command.type & SVGPathData.HORIZ_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (normalizeV && command.type & SVGPathData.VERT_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n      if (normalizeZ && command.type & SVGPathData.CLOSE_PATH) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? pathStartX - prevX : pathStartX;\n        command.y = command.relative ? pathStartY - prevY : pathStartY;\n      }\n      if (command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY)) {\n        command.type = SVGPathData.LINE_TO;\n        delete command.rX;\n        delete command.rY;\n        delete command.xRot;\n        delete command.lArcFlag;\n        delete command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  /*\n   * Transforms smooth curves and quads to normal curves and quads (SsTt to CcQq)\n   */\n  export function NORMALIZE_ST() {\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        command.type = SVGPathData.CURVE_TO;\n        prevCurveC2X = isNaN(prevCurveC2X) ? prevX : prevCurveC2X;\n        prevCurveC2Y = isNaN(prevCurveC2Y) ? prevY : prevCurveC2Y;\n        command.x1 = command.relative ? prevX - prevCurveC2X : 2 * prevX - prevCurveC2X;\n        command.y1 = command.relative ? prevY - prevCurveC2Y : 2 * prevY - prevCurveC2Y;\n      }\n      if (command.type & SVGPathData.CURVE_TO) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : prevQuadCY;\n        command.x1 = command.relative ? prevX - prevQuadCX : 2 * prevX - prevQuadCX;\n        command.y1 = command.relative ? prevY - prevQuadCY : 2 * prevY - prevQuadCY;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y1;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      return command;\n    });\n  }\n  /*\n   * A quadratic bézier curve can be represented by a cubic bézier curve which has\n   * the same end points as the quadratic and both control points in place of the\n   * quadratic\"s one.\n   *\n   * This transformer replaces QqTt commands with Cc commands respectively.\n   * This is useful for reading path data into a system which only has a\n   * representation for cubic curves.\n   */\n  export function QT_TO_C() {\n    let prevQuadX1 = NaN;\n    let prevQuadY1 = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadX1 = isNaN(prevQuadX1) ? prevX : prevQuadX1;\n        prevQuadY1 = isNaN(prevQuadY1) ? prevY : prevQuadY1;\n        command.x1 = command.relative ? prevX - prevQuadX1 : 2 * prevX - prevQuadX1;\n        command.y1 = command.relative ? prevY - prevQuadY1 : 2 * prevY - prevQuadY1;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadX1 = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadY1 = command.relative ? prevY + command.y1 : command.y1;\n        const x1 = command.x1;\n        const y1 = command.y1;\n\n        command.type = SVGPathData.CURVE_TO;\n        command.x1 = ((command.relative ? 0 : prevX) + x1 * 2) / 3;\n        command.y1 = ((command.relative ? 0 : prevY) + y1 * 2) / 3;\n        command.x2 = (command.x + x1 * 2) / 3;\n        command.y2 = (command.y + y1 * 2) / 3;\n      } else {\n        prevQuadX1 = NaN;\n        prevQuadY1 = NaN;\n      }\n\n      return command;\n    });\n  }\n  export function INFO(\n    f: (command: any, prevXAbs: number, prevYAbs: number,\n        pathStartXAbs: number, pathStartYAbs: number) => any | any[]) {\n    let prevXAbs = 0;\n    let prevYAbs = 0;\n    let pathStartXAbs = NaN;\n    let pathStartYAbs = NaN;\n\n    return function transform(command: any) {\n      if (isNaN(pathStartXAbs) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n\n      const result = f(command, prevXAbs, prevYAbs, pathStartXAbs, pathStartYAbs);\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        prevXAbs = pathStartXAbs;\n        prevYAbs = pathStartYAbs;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        prevXAbs = (command.relative ? prevXAbs + command.x : command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        prevYAbs = (command.relative ? prevYAbs + command.y : command.y);\n      }\n\n      if (command.type & SVGPathData.MOVE_TO) {\n        pathStartXAbs = prevXAbs;\n        pathStartYAbs = prevYAbs;\n      }\n\n      return result;\n    };\n  }\n  /*\n   * remove 0-length segments\n   */\n  export function SANITIZE(EPS = 0) {\n    assertNumbers(EPS);\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      const abs = Math.abs;\n      let skip = false;\n      let x1Rel = 0;\n      let y1Rel = 0;\n\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        x1Rel = isNaN(prevCurveC2X) ? 0 : prevX - prevCurveC2X;\n        y1Rel = isNaN(prevCurveC2Y) ? 0 : prevY - prevCurveC2Y;\n      }\n      if (command.type & (SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO)) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : 2 * prevX - prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : 2 * prevY - prevQuadCY;\n      } else if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y2;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      if (command.type & SVGPathData.LINE_COMMANDS ||\n        command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY || !command.lArcFlag) ||\n        command.type & SVGPathData.CURVE_TO || command.type & SVGPathData.SMOOTH_CURVE_TO ||\n        command.type & SVGPathData.QUAD_TO || command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        const xRel = \"undefined\" === typeof command.x ? 0 :\n          (command.relative ? command.x : command.x - prevX);\n        const yRel = \"undefined\" === typeof command.y ? 0 :\n          (command.relative ? command.y : command.y - prevY);\n\n        x1Rel = !isNaN(prevQuadCX) ? prevQuadCX - prevX :\n          \"undefined\" === typeof command.x1 ? x1Rel :\n            command.relative ? command.x :\n              command.x1 - prevX;\n        y1Rel = !isNaN(prevQuadCY) ? prevQuadCY - prevY :\n          \"undefined\" === typeof command.y1 ? y1Rel :\n            command.relative ? command.y :\n              command.y1 - prevY;\n\n        const x2Rel = \"undefined\" === typeof command.x2 ? 0 :\n          (command.relative ? command.x : command.x2 - prevX);\n        const y2Rel = \"undefined\" === typeof command.y2 ? 0 :\n          (command.relative ? command.y : command.y2 - prevY);\n\n        if (abs(xRel) <= EPS && abs(yRel) <= EPS &&\n          abs(x1Rel) <= EPS && abs(y1Rel) <= EPS &&\n          abs(x2Rel) <= EPS && abs(y2Rel) <= EPS) {\n          skip = true;\n        }\n      }\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        if (abs(prevX - pathStartX) <= EPS && abs(prevY - pathStartY) <= EPS) {\n          skip = true;\n        }\n      }\n\n      return skip ? [] : command;\n    });\n  }\n  // SVG Transforms : http://www.w3.org/TR/SVGTiny12/coords.html#TransformList\n  // Matrix : http://apike.ca/prog_svg_transform.html\n  // a c e\n  // b d f\n  export function MATRIX(a: number, b: number, c: number, d: number, e: number, f: number) {\n    assertNumbers(a, b, c, d, e, f);\n\n    return INFO((command, prevX, prevY, pathStartX) => {\n      const origX1 = command.x1;\n      const origX2 = command.x2;\n      // if isNaN(pathStartX), then this is the first command, which is ALWAYS an\n      // absolute MOVE_TO, regardless what the relative flag says\n      const comRel = command.relative && !isNaN(pathStartX);\n      const x = \"undefined\" !== typeof command.x ? command.x : (comRel ? 0 : prevX);\n      const y = \"undefined\" !== typeof command.y ? command.y : (comRel ? 0 : prevY);\n\n      if (command.type & SVGPathData.HORIZ_LINE_TO && 0 !== b) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (command.type & SVGPathData.VERT_LINE_TO && 0 !== c) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = (command.x * a) + (y * c) + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = (x * b) + command.y * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = command.x1 * a + command.y1 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = origX1 * b + command.y1 * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = command.x2 * a + command.y2 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = origX2 * b + command.y2 * d + (comRel ? 0 : f);\n      }\n      function sqr(x: number) { return x * x; }\n      const det = a * d - b * c;\n\n      if (\"undefined\" !== typeof command.xRot) {\n        // Skip if this is a pure translation\n        if (1 !== a || 0 !== b || 0 !== c || 1 !== d) {\n          // Special case for singular matrix\n          if (0 === det) {\n            // In the singular case, the arc is compressed to a line. The actual geometric image of the original\n            // curve under this transform possibly extends beyond the starting and/or ending points of the segment, but\n            // for simplicity we ignore this detail and just replace this command with a single line segment.\n            delete command.rX;\n            delete command.rY;\n            delete command.xRot;\n            delete command.lArcFlag;\n            delete command.sweepFlag;\n            command.type = SVGPathData.LINE_TO;\n          } else {\n            // Convert to radians\n            const xRot = command.xRot * Math.PI / 180;\n\n            // Convert rotated ellipse to general conic form\n            // x0^2/rX^2 + y0^2/rY^2 - 1 = 0\n            // x0 = x*cos(xRot) + y*sin(xRot)\n            // y0 = -x*sin(xRot) + y*cos(xRot)\n            // --> A*x^2 + B*x*y + C*y^2 - 1 = 0, where\n            const sinRot = Math.sin(xRot);\n            const cosRot = Math.cos(xRot);\n            const xCurve = 1 / sqr(command.rX);\n            const yCurve = 1 / sqr(command.rY);\n            const A = sqr(cosRot) * xCurve + sqr(sinRot) * yCurve;\n            const B = 2 * sinRot * cosRot * (xCurve - yCurve);\n            const C = sqr(sinRot) * xCurve + sqr(cosRot) * yCurve;\n\n            // Apply matrix to A*x^2 + B*x*y + C*y^2 - 1 = 0\n            // x1 = a*x + c*y\n            // y1 = b*x + d*y\n            //      (we can ignore e and f, since pure translations don\"t affect the shape of the ellipse)\n            // --> A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 = 0, where\n            const A1 = A * d * d - B * b * d + C * b * b;\n            const B1 = B * (a * d + b * c) - 2 * (A * c * d + C * a * b);\n            const C1 = A * c * c - B * a * c + C * a * a;\n\n            // Unapply newXRot to get back to axis-aligned ellipse equation\n            // x1 = x2*cos(newXRot) - y2*sin(newXRot)\n            // y1 = x2*sin(newXRot) + y2*cos(newXRot)\n            // A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 =\n            //   x2^2*(A1*cos(newXRot)^2 + B1*sin(newXRot)*cos(newXRot) + C1*sin(newXRot)^2)\n            //   + x2*y2*(2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2))\n            //   + y2^2*(A1*sin(newXRot)^2 - B1*sin(newXRot)*cos(newXRot) + C1*cos(newXRot)^2)\n            //   (which must have the same zeroes as)\n            // x2^2/newRX^2 + y2^2/newRY^2 - 1\n            //   (so we have)\n            // 2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2) = 0\n            // (A1 - C1)*sin(2*newXRot) = B1*cos(2*newXRot)\n            // 2*newXRot = atan2(B1, A1 - C1)\n            const newXRot = ((Math.atan2(B1, A1 - C1) + Math.PI) % Math.PI) / 2;\n            // For any integer n, (atan2(B1, A1 - C1) + n*pi)/2 is a solution to the above; incrementing n just swaps\n            // the x and y radii computed below (since that\"s what rotating an ellipse by pi/2 does).  Choosing the\n            // rotation between 0 and pi/2 eliminates the ambiguity and leads to more predictable output.\n\n            // Finally, we get newRX and newRY from the same-zeroes relationship that gave us newXRot\n            const newSinRot = Math.sin(newXRot);\n            const newCosRot = Math.cos(newXRot);\n\n            command.rX = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newCosRot) + B1 * newSinRot * newCosRot + C1 * sqr(newSinRot));\n            command.rY = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newSinRot) - B1 * newSinRot * newCosRot + C1 * sqr(newCosRot));\n            command.xRot = newXRot * 180 / Math.PI;\n          }\n        }\n      }\n      // sweepFlag needs to be inverted when mirroring shapes\n      // see http://www.itk.ilstu.edu/faculty/javila/SVG/SVG_drawing1/elliptical_curve.htm\n      // m 65,10 a 50,25 0 1 0 50,25\n      // M 65,60 A 50,25 0 1 1 115,35\n      if (\"undefined\" !== typeof command.sweepFlag && 0 > det) {\n        command.sweepFlag = +!command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  export function ROTATE(a: number, x = 0, y = 0) {\n    assertNumbers(a, x, y);\n    const sin = Math.sin(a);\n    const cos = Math.cos(a);\n\n    return MATRIX(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);\n  }\n  export function TRANSLATE(dX: number, dY = 0) {\n    assertNumbers(dX, dY);\n    return MATRIX(1, 0, 0, 1, dX, dY);\n  }\n  export function SCALE(dX: number, dY = dX) {\n    assertNumbers(dX, dY);\n    return MATRIX(dX, 0, 0, dY, 0, 0);\n  }\n  export function SKEW_X(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, 0, Math.atan(a), 1, 0, 0);\n  }\n  export function SKEW_Y(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, Math.atan(a), 0, 1, 0, 0);\n  }\n  export function X_AXIS_SYMMETRY(xOffset = 0) {\n    assertNumbers(xOffset);\n    return MATRIX(-1, 0, 0, 1, xOffset, 0);\n  }\n  export function Y_AXIS_SYMMETRY(yOffset = 0) {\n    assertNumbers(yOffset);\n    return MATRIX(1, 0, 0, -1, 0, yOffset);\n  }\n  // Convert arc commands to curve commands\n  export function A_TO_C() {\n    return INFO((command, prevX, prevY) => {\n      if (SVGPathData.ARC === command.type) {\n        return a2c(command, command.relative ? 0 : prevX, command.relative ? 0 : prevY);\n      }\n      return command;\n    });\n  }\n  // @see annotateArcCommand\n  export function ANNOTATE_ARCS() {\n    return INFO((c, x1, y1) => {\n      if (c.relative) {\n        x1 = 0;\n        y1 = 0;\n      }\n      if (SVGPathData.ARC === c.type) {\n        annotateArcCommand(c, x1, y1);\n      }\n      return c;\n    });\n  }\n  export function CLONE() {\n    return (c: SVGCommand) => {\n      const result = {} as SVGCommand;\n      // tslint:disable-next-line\n      for (const key in c) {\n        result[key as keyof SVGCommand] = c[key as keyof SVGCommand];\n      }\n      return result;\n    };\n  }\n  // @see annotateArcCommand\n  export function CALCULATE_BOUNDS() {\n    const clone = CLONE();\n    const toAbs = TO_ABS();\n    const qtToC = QT_TO_C();\n    const normST = NORMALIZE_ST();\n    const f: TransformFunction & {minX: number, maxX: number, minY: number, maxY: number} =\n        INFO((command, prevXAbs, prevYAbs) => {\n      const c = normST(qtToC(toAbs(clone(command))));\n      function fixX(absX: number) {\n        if (absX > f.maxX) { f.maxX = absX; }\n        if (absX < f.minX) { f.minX = absX; }\n      }\n      function fixY(absY: number) {\n        if (absY > f.maxY) { f.maxY = absY; }\n        if (absY < f.minY) { f.minY = absY; }\n      }\n      if (c.type & SVGPathData.DRAWING_COMMANDS) {\n        fixX(prevXAbs);\n        fixY(prevYAbs);\n      }\n      if (c.type & SVGPathData.HORIZ_LINE_TO) {\n        fixX(c.x);\n      }\n      if (c.type & SVGPathData.VERT_LINE_TO) {\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.LINE_TO) {\n        fixX(c.x);\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.CURVE_TO) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        const xDerivRoots = bezierRoot(prevXAbs, c.x1, c.x2, c.x);\n\n        for (const derivRoot of xDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixX(bezierAt(prevXAbs, c.x1, c.x2, c.x, derivRoot));\n          }\n        }\n        const yDerivRoots = bezierRoot(prevYAbs, c.y1, c.y2, c.y);\n\n        for (const derivRoot of yDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixY(bezierAt(prevYAbs, c.y1, c.y2, c.y, derivRoot));\n          }\n        }\n      }\n      if (c.type & SVGPathData.ARC) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        annotateArcCommand(c, prevXAbs, prevYAbs);\n        // p = cos(phi) * xv + sin(phi) * yv\n        // dp = -sin(phi) * xv + cos(phi) * yv = 0\n        const xRotRad = c.xRot / 180 * Math.PI;\n        // points on ellipse for phi = 0° and phi = 90°\n        const x0 = Math.cos(xRotRad) * c.rX;\n        const y0 = Math.sin(xRotRad) * c.rX;\n        const x90 = -Math.sin(xRotRad) * c.rY;\n        const y90 = Math.cos(xRotRad) * c.rY;\n\n        // annotateArcCommand returns phi1 and phi2 such that -180° < phi1 < 180° and phi2 is smaller or greater\n        // depending on the sweep flag. Calculate phiMin, phiMax such that -180° < phiMin < 180° and phiMin < phiMax\n        const [phiMin, phiMax] = c.phi1 < c.phi2 ?\n          [c.phi1, c.phi2] :\n          (-180 > c.phi2 ? [c.phi2 + 360, c.phi1 + 360] : [c.phi2, c.phi1]);\n        const normalizeXiEta = ([xi, eta]: [number, number]) => {\n          const phiRad = Math.atan2(eta, xi);\n          const phi = phiRad * 180 / Math.PI;\n\n          return phi < phiMin ? phi + 360 : phi;\n        };\n        // xi = cos(phi), eta = sin(phi)\n\n        const xDerivRoots = intersectionUnitCircleLine(x90, -x0, 0).map(normalizeXiEta);\n        for (const derivRoot of xDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixX(arcAt(c.cX, x0, x90, derivRoot));\n          }\n        }\n\n        const yDerivRoots = intersectionUnitCircleLine(y90, -y0, 0).map(normalizeXiEta);\n        for (const derivRoot of yDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixY(arcAt(c.cY, y0, y90, derivRoot));\n          }\n        }\n      }\n      return command;\n    }) as any;\n\n    f.minX = Infinity;\n    f.maxX = -Infinity;\n    f.minY = Infinity;\n    f.maxY = -Infinity;\n    return f;\n  }\n}\n","import { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformFunction } from \"./types\";\n\nexport abstract class TransformableSVG {\n  round(x?: number) {\n    return this.transform(SVGPathDataTransformer.ROUND(x));\n  }\n\n  toAbs() {\n    return this.transform(SVGPathDataTransformer.TO_ABS());\n  }\n\n  toRel() {\n    return this.transform(SVGPathDataTransformer.TO_REL());\n  }\n\n  normalizeHVZ(a?: boolean, b?: boolean, c?: boolean) {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_HVZ(a, b, c));\n  }\n\n  normalizeST() {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_ST());\n  }\n\n  qtToC() {\n    return this.transform(SVGPathDataTransformer.QT_TO_C());\n  }\n\n  aToC() {\n    return this.transform(SVGPathDataTransformer.A_TO_C());\n  }\n\n  sanitize(eps?: number) {\n    return this.transform(SVGPathDataTransformer.SANITIZE(eps));\n  }\n\n  translate(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.TRANSLATE(x, y));\n  }\n\n  scale(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.SCALE(x, y));\n  }\n\n  rotate(a: number, x?: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.ROTATE(a, x, y));\n  }\n\n  matrix(a: number, b: number, c: number, d: number, e: number, f: number) {\n    return this.transform(SVGPathDataTransformer.MATRIX(a, b, c, d, e, f));\n  }\n\n  skewX(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_X(a));\n  }\n\n  skewY(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_Y(a));\n  }\n\n  xSymmetry(xOffset?: number) {\n    return this.transform(SVGPathDataTransformer.X_AXIS_SYMMETRY(xOffset));\n  }\n\n  ySymmetry(yOffset?: number) {\n    return this.transform(SVGPathDataTransformer.Y_AXIS_SYMMETRY(yOffset));\n  }\n\n  annotateArcs() {\n    return this.transform(SVGPathDataTransformer.ANNOTATE_ARCS());\n  }\n\n  abstract transform(transformFunction: TransformFunction): this;\n}\n","// Parse SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\nimport { COMMAND_ARG_COUNTS, SVGPathData } from \"./SVGPathData\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n// Private consts : Char groups\nconst isWhiteSpace = (c: string) =>\n  \" \" === c || \"\\t\" === c || \"\\r\" === c || \"\\n\" === c;\nconst isDigit = (c: string) =>\n  \"0\".charCodeAt(0) <= c.charCodeAt(0) && c.charCodeAt(0) <= \"9\".charCodeAt(0);\nconst COMMANDS = \"mMzZlLhHvVcCsSqQtTaA\";\n\nexport class SVGPathDataParser extends TransformableSVG {\n  private curNumber: string = \"\";\n  private curCommandType: SVGCommand[\"type\"] | -1 = -1;\n  private curCommandRelative = false;\n  private canParseCommandOrComma = true;\n  private curNumberHasExp = false;\n  private curNumberHasExpDigits = false;\n  private curNumberHasDecimal = false;\n  private curArgs: number[] = [];\n\n  constructor() {\n    super();\n  }\n\n  finish(commands: SVGCommand[] = []) {\n    this.parse(\" \", commands);\n    // Adding residual command\n    if (0 !== this.curArgs.length || !this.canParseCommandOrComma) {\n      throw new SyntaxError(\"Unterminated command at the path end.\");\n    }\n    return commands;\n  }\n\n  parse(str: string, commands: SVGCommand[] = []) {\n    const finishCommand = (command: SVGCommand) => {\n      commands.push(command);\n      this.curArgs.length = 0;\n      this.canParseCommandOrComma = true;\n    };\n\n    for (let i = 0; i < str.length; i++) {\n      const c = str[i];\n      // White spaces parsing\n      const isAArcFlag = this.curCommandType === SVGPathData.ARC &&\n        (this.curArgs.length === 3 || this.curArgs.length === 4) &&\n        this.curNumber.length === 1 &&\n        (this.curNumber === \"0\" || this.curNumber === \"1\");\n      const isEndingDigit = isDigit(c) && (\n        (this.curNumber === \"0\" && c === \"0\") ||\n        isAArcFlag\n      );\n\n      if (\n        isDigit(c) &&\n        !isEndingDigit\n      ) {\n        this.curNumber += c;\n        this.curNumberHasExpDigits = this.curNumberHasExp;\n        continue;\n      }\n      if (\"e\" === c || \"E\" === c) {\n        this.curNumber += c;\n        this.curNumberHasExp = true;\n        continue;\n      }\n      if (\n        (\"-\" === c || \"+\" === c) &&\n        this.curNumberHasExp &&\n        !this.curNumberHasExpDigits\n      ) {\n        this.curNumber += c;\n        continue;\n      }\n      // if we already have a \".\", it means we are starting a new number\n      if (\".\" === c && !this.curNumberHasExp && !this.curNumberHasDecimal && !isAArcFlag) {\n        this.curNumber += c;\n        this.curNumberHasDecimal = true;\n        continue;\n      }\n\n      // New number\n      if (this.curNumber && -1 !== this.curCommandType) {\n        const val = Number(this.curNumber);\n        if (isNaN(val)) {\n          throw new SyntaxError(`Invalid number ending at ${i}`);\n        }\n        if (this.curCommandType === SVGPathData.ARC) {\n          if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n            if (0 > val) {\n              throw new SyntaxError(\n                `Expected positive number, got \"${val}\" at index \"${i}\"`,\n              );\n            }\n          } else if (3 === this.curArgs.length || 4 === this.curArgs.length) {\n            if (\"0\" !== this.curNumber && \"1\" !== this.curNumber) {\n              throw new SyntaxError(\n                `Expected a flag, got \"${this.curNumber}\" at index \"${i}\"`,\n              );\n            }\n          }\n        }\n        this.curArgs.push(val);\n        if (this.curArgs.length === COMMAND_ARG_COUNTS[this.curCommandType]) {\n          if (SVGPathData.HORIZ_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.HORIZ_LINE_TO,\n              relative: this.curCommandRelative,\n              x: val,\n            });\n          } else if (SVGPathData.VERT_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.VERT_LINE_TO,\n              relative: this.curCommandRelative,\n              y: val,\n            });\n            // Move to / line to / smooth quadratic curve to commands (x, y)\n          } else if (\n            this.curCommandType === SVGPathData.MOVE_TO ||\n            this.curCommandType === SVGPathData.LINE_TO ||\n            this.curCommandType === SVGPathData.SMOOTH_QUAD_TO\n          ) {\n            finishCommand({\n              type: this.curCommandType,\n              relative: this.curCommandRelative,\n              x: this.curArgs[0],\n              y: this.curArgs[1],\n            } as SVGCommand);\n            // Switch to line to state\n            if (SVGPathData.MOVE_TO === this.curCommandType) {\n              this.curCommandType = SVGPathData.LINE_TO;\n            }\n          } else if (this.curCommandType === SVGPathData.CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.CURVE_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x2: this.curArgs[2],\n              y2: this.curArgs[3],\n              x: this.curArgs[4],\n              y: this.curArgs[5],\n            });\n          } else if (this.curCommandType === SVGPathData.SMOOTH_CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.SMOOTH_CURVE_TO,\n              relative: this.curCommandRelative,\n              x2: this.curArgs[0],\n              y2: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.QUAD_TO) {\n            finishCommand({\n              type: SVGPathData.QUAD_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.ARC) {\n            finishCommand({\n              type: SVGPathData.ARC,\n              relative: this.curCommandRelative,\n              rX: this.curArgs[0],\n              rY: this.curArgs[1],\n              xRot: this.curArgs[2],\n              lArcFlag: this.curArgs[3] as 0 | 1,\n              sweepFlag: this.curArgs[4] as 0 | 1,\n              x: this.curArgs[5],\n              y: this.curArgs[6],\n            });\n          }\n        }\n        this.curNumber = \"\";\n        this.curNumberHasExpDigits = false;\n        this.curNumberHasExp = false;\n        this.curNumberHasDecimal = false;\n        this.canParseCommandOrComma = true;\n      }\n      // Continue if a white space or a comma was detected\n      if (isWhiteSpace(c)) {\n        continue;\n      }\n      if (\",\" === c && this.canParseCommandOrComma) {\n        // L 0,0, H is not valid:\n        this.canParseCommandOrComma = false;\n        continue;\n      }\n      // if a sign is detected, then parse the new number\n      if (\"+\" === c || \"-\" === c || \".\" === c) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = \".\" === c;\n        continue;\n      }\n      // if a 0 is detected, then parse the new number\n      if (isEndingDigit) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = false;\n        continue;\n      }\n\n      // Adding residual command\n      if (0 !== this.curArgs.length) {\n        throw new SyntaxError(`Unterminated command at index ${i}.`);\n      }\n      if (!this.canParseCommandOrComma) {\n        throw new SyntaxError(\n          `Unexpected character \"${c}\" at index ${i}. Command cannot follow comma`,\n        );\n      }\n      this.canParseCommandOrComma = false;\n      // Detecting the next command\n      if (\"z\" === c || \"Z\" === c) {\n        commands.push({\n          type: SVGPathData.CLOSE_PATH,\n        });\n        this.canParseCommandOrComma = true;\n        this.curCommandType = -1;\n        continue;\n        // Horizontal move to command\n      } else if (\"h\" === c || \"H\" === c) {\n        this.curCommandType = SVGPathData.HORIZ_LINE_TO;\n        this.curCommandRelative = \"h\" === c;\n        // Vertical move to command\n      } else if (\"v\" === c || \"V\" === c) {\n        this.curCommandType = SVGPathData.VERT_LINE_TO;\n        this.curCommandRelative = \"v\" === c;\n        // Move to command\n      } else if (\"m\" === c || \"M\" === c) {\n        this.curCommandType = SVGPathData.MOVE_TO;\n        this.curCommandRelative = \"m\" === c;\n        // Line to command\n      } else if (\"l\" === c || \"L\" === c) {\n        this.curCommandType = SVGPathData.LINE_TO;\n        this.curCommandRelative = \"l\" === c;\n        // Curve to command\n      } else if (\"c\" === c || \"C\" === c) {\n        this.curCommandType = SVGPathData.CURVE_TO;\n        this.curCommandRelative = \"c\" === c;\n        // Smooth curve to command\n      } else if (\"s\" === c || \"S\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_CURVE_TO;\n        this.curCommandRelative = \"s\" === c;\n        // Quadratic bezier curve to command\n      } else if (\"q\" === c || \"Q\" === c) {\n        this.curCommandType = SVGPathData.QUAD_TO;\n        this.curCommandRelative = \"q\" === c;\n        // Smooth quadratic bezier curve to command\n      } else if (\"t\" === c || \"T\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_QUAD_TO;\n        this.curCommandRelative = \"t\" === c;\n        // Elliptic arc command\n      } else if (\"a\" === c || \"A\" === c) {\n        this.curCommandType = SVGPathData.ARC;\n        this.curCommandRelative = \"a\" === c;\n      } else {\n        throw new SyntaxError(`Unexpected character \"${c}\" at index ${i}.`);\n      }\n    }\n    return commands;\n  }\n  /**\n   * Return a wrapper around this parser which applies the transformation on parsed commands.\n   */\n  transform(transform: TransformFunction) {\n    const result = Object.create(this, {\n      parse: {\n        value(chunk: string, commands: SVGCommand[] = []) {\n          const parsedCommands = Object.getPrototypeOf(this).parse.call(\n            this,\n            chunk,\n          );\n          for (const c of parsedCommands) {\n            const cT = transform(c);\n            if (Array.isArray(cT)) {\n              commands.push(...cT);\n            } else {\n              commands.push(cT);\n            }\n          }\n          return commands;\n        },\n      },\n    });\n    return result as this;\n  }\n}\n","import { encodeSVGPath } from \"./SVGPathDataEncoder\";\nimport { SVGPathDataParser } from \"./SVGPathDataParser\";\nimport { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand } from \"./types\";\n\nexport class SVGPathData extends TransformableSVG {\n  commands: SVGCommand[];\n  constructor(content: string | SVGCommand[]) {\n    super();\n    if (\"string\" === typeof content) {\n      this.commands = SVGPathData.parse(content);\n    } else {\n      this.commands = content;\n    }\n  }\n\n  encode() {\n    return SVGPathData.encode(this.commands);\n  }\n\n  getBounds() {\n    const boundsTransform = SVGPathDataTransformer.CALCULATE_BOUNDS();\n\n    this.transform(boundsTransform);\n    return boundsTransform;\n  }\n\n  transform(\n    transformFunction: (input: SVGCommand) => SVGCommand | SVGCommand[],\n  ) {\n    const newCommands = [];\n\n    for (const command of this.commands) {\n      const transformedCommand = transformFunction(command);\n\n      if (Array.isArray(transformedCommand)) {\n        newCommands.push(...transformedCommand);\n      } else {\n        newCommands.push(transformedCommand);\n      }\n    }\n    this.commands = newCommands;\n    return this;\n  }\n\n  static encode(commands: SVGCommand[]) {\n    return encodeSVGPath(commands);\n      }\n\n  static parse(path: string) {\n    const parser = new SVGPathDataParser();\n    const commands: SVGCommand[] = [];\n    parser.parse(path, commands);\n    parser.finish(commands);\n    return commands;\n  }\n\n  static readonly CLOSE_PATH: 1 = 1;\n  static readonly MOVE_TO: 2 = 2;\n  static readonly HORIZ_LINE_TO: 4 = 4;\n  static readonly VERT_LINE_TO: 8 = 8;\n  static readonly LINE_TO: 16 = 16;\n  static readonly CURVE_TO: 32 = 32;\n  static readonly SMOOTH_CURVE_TO: 64 = 64;\n  static readonly QUAD_TO: 128 = 128;\n  static readonly SMOOTH_QUAD_TO: 256 = 256;\n  static readonly ARC: 512 = 512;\n  static readonly LINE_COMMANDS = SVGPathData.LINE_TO | SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO;\n  static readonly DRAWING_COMMANDS = SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO | SVGPathData.LINE_TO |\n  SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO | SVGPathData.QUAD_TO |\n  SVGPathData.SMOOTH_QUAD_TO | SVGPathData.ARC;\n}\n\nexport const COMMAND_ARG_COUNTS = {\n    [SVGPathData.MOVE_TO]: 2,\n    [SVGPathData.LINE_TO]: 2,\n    [SVGPathData.HORIZ_LINE_TO]: 1,\n    [SVGPathData.VERT_LINE_TO]: 1,\n    [SVGPathData.CLOSE_PATH]: 0,\n    [SVGPathData.QUAD_TO]: 4,\n    [SVGPathData.SMOOTH_QUAD_TO]: 2,\n    [SVGPathData.CURVE_TO]: 6,\n    [SVGPathData.SMOOTH_CURVE_TO]: 4,\n    [SVGPathData.ARC]: 7,\n};\n\nexport {encodeSVGPath} from \"./SVGPathDataEncoder\";\nexport {SVGPathDataParser} from \"./SVGPathDataParser\";\nexport {SVGPathDataTransformer} from \"./SVGPathDataTransformer\";\n"]},"metadata":{},"sourceType":"module"}