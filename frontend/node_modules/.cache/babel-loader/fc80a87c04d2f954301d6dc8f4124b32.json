{"ast":null,"code":"import toDate from '../toDate/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","map":{"version":3,"names":["toDate","isBefore","dirtyDate","dirtyDateToCompare","arguments","length","TypeError","date","dateToCompare","getTime"],"sources":["E:/practice project/react-component/contact-book-mern/frontend/node_modules/date-fns/esm/isBefore/index.js"],"sourcesContent":["import toDate from '../toDate/index.js'\n\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var date = toDate(dirtyDate)\n  var dateToCompare = toDate(dirtyDateToCompare)\n  return date.getTime() < dateToCompare.getTime()\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,kBAA7B,EAAiD;EAC9D,IAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;IACxB,MAAM,IAAIC,SAAJ,CACJ,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UADnD,CAAN;EAGD;;EAED,IAAIE,IAAI,GAAGP,MAAM,CAACE,SAAD,CAAjB;EACA,IAAIM,aAAa,GAAGR,MAAM,CAACG,kBAAD,CAA1B;EACA,OAAOI,IAAI,CAACE,OAAL,KAAiBD,aAAa,CAACC,OAAd,EAAxB;AACD"},"metadata":{},"sourceType":"module"}