{"ast":null,"code":"import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","map":{"version":3,"names":["toInteger","toDate","setUTCDay","dirtyDate","dirtyDay","dirtyOptions","arguments","length","TypeError","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","date","day","currentDay","getUTCDay","remainder","dayIndex","diff","setUTCDate","getUTCDate"],"sources":["E:/my git/react_hook_auth/frontend/node_modules/date-fns/esm/_lib/setUTCDay/index.js"],"sourcesContent":["import toInteger from '../toInteger/index.js'\nimport toDate from '../../toDate/index.js'\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError(\n      '2 arguments required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  var options = dirtyOptions || {}\n  var locale = options.locale\n  var localeWeekStartsOn =\n    locale && locale.options && locale.options.weekStartsOn\n  var defaultWeekStartsOn =\n    localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn)\n  var weekStartsOn =\n    options.weekStartsOn == null\n      ? defaultWeekStartsOn\n      : toInteger(options.weekStartsOn)\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively')\n  }\n\n  var date = toDate(dirtyDate)\n  var day = toInteger(dirtyDay)\n\n  var currentDay = date.getUTCDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CAEA;AACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,YAAxC,EAAsD;EACnE,IAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;IACxB,MAAM,IAAIC,SAAJ,CACJ,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UADnD,CAAN;EAGD;;EAED,IAAIE,OAAO,GAAGJ,YAAY,IAAI,EAA9B;EACA,IAAIK,MAAM,GAAGD,OAAO,CAACC,MAArB;EACA,IAAIC,kBAAkB,GACpBD,MAAM,IAAIA,MAAM,CAACD,OAAjB,IAA4BC,MAAM,CAACD,OAAP,CAAeG,YAD7C;EAEA,IAAIC,mBAAmB,GACrBF,kBAAkB,IAAI,IAAtB,GAA6B,CAA7B,GAAiCX,SAAS,CAACW,kBAAD,CAD5C;EAEA,IAAIC,YAAY,GACdH,OAAO,CAACG,YAAR,IAAwB,IAAxB,GACIC,mBADJ,GAEIb,SAAS,CAACS,OAAO,CAACG,YAAT,CAHf,CAbmE,CAkBnE;;EACA,IAAI,EAAEA,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;IAC7C,MAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;EACD;;EAED,IAAIC,IAAI,GAAGd,MAAM,CAACE,SAAD,CAAjB;EACA,IAAIa,GAAG,GAAGhB,SAAS,CAACI,QAAD,CAAnB;EAEA,IAAIa,UAAU,GAAGF,IAAI,CAACG,SAAL,EAAjB;EAEA,IAAIC,SAAS,GAAGH,GAAG,GAAG,CAAtB;EACA,IAAII,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;EAEA,IAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGR,YAAX,GAA0B,CAA1B,GAA8B,CAA/B,IAAoCI,GAApC,GAA0CC,UAArD;EAEAF,IAAI,CAACO,UAAL,CAAgBP,IAAI,CAACQ,UAAL,KAAoBF,IAApC;EACA,OAAON,IAAP;AACD"},"metadata":{},"sourceType":"module"}